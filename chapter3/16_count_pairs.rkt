#lang sicp
;; Count pairs

(define (count-pairs x)
  (if (not (pair? x))
      0
      (+ (count-pairs (car x))
         (count-pairs (cdr x))
         1)))

;; Box-pointer diagram of a structures that would return 3, 4, 7 and inf for the procedure above

;; ================================================================================
;; It returns 3 for following list structure

(define x (cons (cons 1 2) (cons 3 4)))
(count-pairs x)

;; Box pointer notation:

;; +-------------+-------------+
;; |             |             |
;; |      *      |      *      |
;; |      |      |      |      |
;; +------+------+------+------+
;; |	     |
;; |	     |
;; |	     |
;; V       	     V
;; +------+------+	 +----+-----+
;; |  *   |  *   |	 | *  |  *  |
;; |  |   |  |   |	 | |  |  |  |
;; +--+---+--+---+	 +-+--+--+--+
;; |	  |	   |	 |
;; V   	  V	   V	 V
;; 1   	  2    	   3   	 4

;; ================================================================================

;; It returns 4 for the following structure

(define y (cons 3 4))
(define c (cons 1 y))
(define z (cons c y))
(count-pairs z)

;; Box-pointer notation


;; +--------------+---------------+
;; |      *       |      *        |
;; |      |       |      |        |
;; +------+-------+------+--------+
;; |		    |
;; |		    |
;; V     	    V
;; +------+------+    +-------+-------+
;; |  *   |      |	 |   *   |  *    |
;; |  |   |  *---+--->|   |   |  |    |
;; +--+---+------+  	 +---+---+--+----+
;; |	       	     |	    |
;; |		     |	    |
;; V		     V 	    V
;; 1		     3 	    4

;; =================================================================================

;; For this it'd return 7

(define p (list 2))
(define d (cons p p))
(define e (cons d d))

(count-pairs e)

;; Box-pointer notation


;; +----------+------------+
;; |          |            |
;; |    *     |     *      |
;; |    |     |     |      |
;; +----+-----+-----+------+
;; |   +-------+
;; |   |
;; V   V
;; +----+-+------+	    +------+-------o
;; |  *   |  *---+-------->|  *   |       |
;; |  |   |      |   +---->|  |   |  NIL  |
;; +--+---+------+   |	    +--+---+-------+
;; | 	      |	       |
;; +--------------+        V
;; 2

;; ================================================================================

;; For this, it would be stuck in a recursion

;; (define x (list 1 2))
;; (set-car! x x)

;; Box pointer diagram:


;; x
;; |
;; +-----+  |
;; |	 |  |
;; |	 V  V
;; |  +--------+-------+
;; |  |   *    |  *    |
;; |  |   |    |  |    |
;; |  +---+----+--+----+
;; |	  |	  |
;; |	  |	  |
;; +------+	  |
;; V
;; 2

;; ================================================================================

;; Sigh! Finally completed. Thanks, artist mode ðŸ’‘
