
This requires some sketching

Recursive call

(define (factorial n)
  (if (= n 1)
      1
      (* n (factorial (- n 1)))))

	      					       Global Environment
      +--------------------------------------------------------------------------------------------------------------------------+
      |                        	       	       	      	     	    	       	               	       	        	       	 |
      |                        	       	       	      	     	    	       	               	       	        	       	 |
      +--------------------------------------------------------------------------------------------------------------------------+
	      	 |		 |		 |		 |	       |	     |
       	      	 |		 |		 |		 |	       |	     |
     	E1     	 |     E2      	 |     E3      	 |     E4        |   E5	       |   E6	     |
       +----------+   +----------+    +----------+    +----------+  +----------+  +----------+
       | n: 6     |   | n:5      |    | n:4      |    | n:3    	 |  | n:2      |  | n:1      |
       |          |   |          |    |          |    |        	 |  |          |  |          |
       |          |   |          |    |          |    |        	 |  |          |  |          |
       |      	  |   |          |    |          |    |          |  |          |  |          |
       |          |   |          |    |          |    |          |  |          |  |          |
       +----------+   +----------+    +----------+    +----------+  +----------+  +----------+
     	Code   	       Code    	       Code    	       Code    	     Code      	   Code




Iterative call

I've renamed variables because the rectangles I drew were too small

(define (factorial n)
  (fact-iter 1 1 n))
(define (fact-iter pro ctr maxc)
  (if (> ctr maxc)
      pro
      (fact-iter (* ctr pro)
                 (+ ctr 1)
                 maxc)))

		       					Global Environment
       +---------------------------------------------------------------------------------------------------------------------------+
       |                      	          		  		    			      	    		           |
       |                                                                                              	    		           |
       |                                                                                                    		           |
       |                                                                                                                           |
       |                                                                                                                           |
       +---------+---------------+---------------+---------------+-------------+-------------+-------------+-------------+---------+
       	       	 |     		 |		 |		 | 	       |	     |             |             |
     	E1     	 |     E2      	 |     E3      	 |     E4        |   E5	       |   E6	     |   E7        |   E8        |
       +----------+   +----------+    +----------+    +----------+  +----------+  +----------+  +----------+  +----------+
       | n: 6     |   |	pro:1  	 |    | pro:1    |    | pro:2  	 |  | pro:6    |  | pro:24   |  | pro:120  |  | pro:720  |
       |          |   | ctr:1    |    | ctr:2    |    | ctr:3  	 |  | ctr:4    |  | ctr:5    |  | ctr:6    |  | ctr:7    |
       |          |   | maxc:6   |    | maxc:6   |    | maxc:6 	 |  | maxc:6   |  | maxc:6   |  | maxc:6   |  | maxc:6   |
       |      	  |   |          |    |          |    |          |  |          |  |          |  |          |  |          |
       |          |   |          |    |          |    |          |  |          |  |          |  |          |  |          |
       +----------+   +----------+    +----------+    +----------+  +----------+  +----------+  +----------+  +----------+
     	Code  	       Code    	       Code    	       Code    	     Code      	   Code	         Code          Code
	factorial      fact-iter       fact-iter       fact-iter     fact-iter 	   fact-iter   	 fact-iter     fact-iter
